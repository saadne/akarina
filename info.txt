from django.db import models

REGION_CHOICES = (
    ('NKTTWEST', 'NKTTWEST'),
    ('NKTTSOUTH', 'NKTTSOUTH'),
    ('NKTTNORTH', 'NKTTNORTH'),
)
CITY_CHOICES = (
    ('TVZ', 'TVZ'),
    ('LIKSAR', 'LIKSAR'),
    ('PREMIER', 'PREMIER'),
)
RENTTYPE_CHOICES = (
    ('MONTHLY', 'MONTHLY'),
    ('DAILY', 'DAILY'),
    ('TREEMONTH', 'TREEMONTH'),
)
PROPERTY_TYPE_CHOICES = (
    ('APARTMENT', 'APARTMENT'),
    ('LAND', 'LAND'),
    ('HOUSE', 'HOUSE'),
    ('STORE', 'STORE')
)
ADD_TYPE_CHOICES = (
    ('RENT', 'RENT'),
    ('SELL', 'SELL')
)


class Location(models.Model):
    region = models.CharField(
        max_length=100, choices=REGION_CHOICES, default='NKTTWEST')
    city = models.CharField(
        max_length=100, choices=CITY_CHOICES, default='TVZ')

    def __str__(self):
        return self.city


class Property(models.Model):
    rent_type = models.CharField(
        max_length=100, choices=RENTTYPE_CHOICES, default='MONTHLY')
    add_type = models.CharField(
        max_length=100, choices=ADD_TYPE_CHOICES, default='RENT')
    property_type = models.CharField(
        max_length=100, choices=PROPERTY_TYPE_CHOICES, default='APARTMENT')
    street_size = models.IntegerField()
    description = models.TextField()
    image = models.ImageField(null=False, blank=False)
    price = models.FloatField(blank=False)

    def __str__(self):
        return self.property_type


class PropertyImage(models.Model):
    property = models.ForeignKey(Property, on_delete=models.CASCADE)
    image = models.ImageField(null=True, blank=False)


class Feature(models.Model):
    number_of_room = models.IntegerField(blank=False)
    number_of_bathroom = models.IntegerField(blank=False)
    


class House(models.Model):
    property = models.ForeignKey(
        Property, on_delete=models.CASCADE)
    location = models.ForeignKey(
        Location, on_delete=models.CASCADE)
    feature = models.ForeignKey(
        Feature, on_delete=models.CASCADE)
    floor_number = models.IntegerField()
    furniture = models.BooleanField()
    has_car_park = models.BooleanField()
    number_of_kitchen = models.IntegerField()


class Apartment(models.Model):
    property = models.ForeignKey(
        Property, on_delete=models.CASCADE)
    location = models.ForeignKey(
        Location, on_delete=models.CASCADE)
    feature = models.ForeignKey(
        Feature, on_delete=models.CASCADE)
    has_equipe = models.BooleanField()


class Land(models.Model):
    location = models.ForeignKey(
        Location, on_delete=models.CASCADE)
    property = models.ForeignKey(
        Property, on_delete=models.CASCADE)
    length = models.FloatField()
    width = models.FloatField()
    papper = models.TextField()
    is_title = models.BooleanField()


class Store(models.Model):
    location = models.ForeignKey(
        Location, on_delete=models.CASCADE)
    property = models.ForeignKey(
        Property, on_delete=models.CASCADE)
    length = models.FloatField()
    width = models.FloatField()